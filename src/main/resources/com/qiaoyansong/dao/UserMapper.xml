<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiaoyansong.dao.UserMapper">
    <select id="checkUserName" resultType="int">
        select 1
        from user
        where user_name = #{userName}
    </select>
    <select id="checkMailBox" resultType="int">
        select 1
        from user
        where mailbox = #{mailBox}
    </select>
    <insert id="register" useGeneratedKeys="true" keyProperty="id">
        insert into user(user_name, password, mailbox, type, telephone)
        values (#{userName}, #{password}, #{mailbox}, #{type, typeHandler=com.qiaoyansong.handler.UserTypeToTable}, #{telephone})
    </insert>
    <select id="getPassword" resultType="string">
        select password
        from user
        where user_name = #{userName}
    </select>
    <update id="insertSessionInfo">
        update user
        set session_id = #{sessionId}
        where user_name = #{userName}
    </update>
    <update id="removeSessionInfo">
        update user
        set session_id = null
        where user_name = #{userName}
    </update>
    <resultMap id="baseUser" type="User">
        <id column="id" property="id"/>
        <result column="type" property="type" typeHandler="com.qiaoyansong.handler.UserTypeToTable"/>
        <result column="user_name" property="userName"/>
        <result column="password" property="password"/>
        <result column="mailbox" property="mailbox"/>
        <result column="credit" property="credit"/>
        <result column="head_portrait" property="headPortrait"/>
        <result column="session_id" property="sessionId"/>
        <result column="point" property="point"/>
    </resultMap>
    <select id="getUserInfo" resultMap="baseUser">
        select id,
               type,
               user_name,
               password,
               mailbox,
               credit,
               head_portrait,
               session_id,
               point,
               telephone
        from user
        where user_name = #{userName}
    </select>
    <select id="getUserInfoById" resultMap="baseUser">
        select id,
               type,
               user_name,
               password,
               mailbox,
               credit,
               head_portrait,
               session_id,
               point
        from user
        where id = #{id}
    </select>
    <delete id="deleteUserByID">
        delete from user
        where
                id = #{id}
    </delete>
    <select id="getTotalSize" resultType="integer">
        select count(id)
        from
        user
        <where>
            <if test="searchValue!=null">
                <bind name="base" value="'%'+searchValue+'%'"/>
                and user_name like #{base}
            </if>
            and type = 0
        </where>
    </select>
    <select id="getUsers" resultType="User">
        select id, user_name, mailbox, credit, point
        from
        user
        <where>
            <if test="condition.searchValue!=null">
                <bind name="base" value="'%'+condition.searchValue+'%'"/>
                and user_name like #{base}
            </if>
            and type = 0
        </where>
        order by id ${condition.orderBy}
        limit #{beginIndex}, #{pageSize}
    </select>

    <update id="modifyPassword">
        update
                user
        set password = #{password}
        where
                user_name = #{userName}
    </update>
    <update id="modifyUserInfo">
        update
                user
        set credit = #{credit}
        where
                id = #{id}
    </update>
    <update id="userUploadImg">
        update
            user
        set head_portrait = #{headPortrait}
        where
            id = #{id}
    </update>
    <insert id="uploadLocation">
        insert
            into
        user_locations(user_id, telephone, name, province, city, area, location)
        values(#{userId}, #{telephone}, #{name}, #{province}, #{city},#{area},#{location})
    </insert>
    <select id="getLocations" resultType="UserLocations">
        select
                id, telephone, name, province, city, area, location
        from
                user_locations
        where user_id = #{id}
    </select>
    <delete id="deleteLocationById">
        delete
            from
                    user_locations
        where id = #{id}
    </delete>
    <update id="updateLocationById">
        update
                user_locations
            set
             telephone = #{telephone},
             name  = #{name},
             province = #{province},
             city = #{city},
             area = #{area},
             location = #{location}
        where
            id = #{id}
    </update>
    <update id="updateUserPointByUserId">
        update user
            set point = point + #{point}
        where id = #{id}
    </update>
    <select id="getAddressTotalSize" resultType="_int">
        select count(*)
        from
                user_locations
        where user_id = #{userId}
    </select>
    <select id="getAddressListByUserId" resultType="UserLocations">
        select
                id, telephone, name, province, city, area, location
        from
                user_locations
        where user_id = #{condition.userId}
    </select>
    <select id="getPointByUserId" resultType="_int">
        select point
        from user
        where id = #{id}
    </select>
    <update id="subPointByUserId">
        update user set point = point - #{point}
        where id = #{id}
    </update>
</mapper>
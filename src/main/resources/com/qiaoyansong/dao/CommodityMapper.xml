<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qiaoyansong.dao.CommodityMapper">
    <insert id="uploadCommodity">
        insert into commodity(title, content, pubdate, img, quantity, point, summary)
        values (#{title}, #{content}, now(), #{img}, #{quantity}, #{point}, #{summary})
    </insert>
    <select id="getCommodity" resultType="Commodity">
        select id, title, pubdate, img, quantity, point, summary
        from
        commodity
        <where>
            <if test="condition.searchValue!=null">
                <bind name="base" value="'%'+condition.searchValue+'%'"/>
                and title like #{base}
            </if>
        </where>
        order by id ${condition.orderBy}
        limit #{beginIndex}, #{pageSize}
    </select>
    <select id="getTotalSize" resultType="integer">
        select count(id)
        from
        commodity
        <where>
            <if test="searchValue!=null">
                <bind name="base" value="'%'+searchValue+'%'"/>
                and title like #{base}
            </if>
        </where>
    </select>
    <delete id="deleteCommodityByID">
        delete
        from commodity
        where id = #{id}
    </delete>
    <update id="updateCommodityByID">
        update commodity
        set title   = #{title},
            quantity  = #{quantity},
            point = #{point},
            summary = #{summary}
        where id = #{id}
    </update>
    <select id="getCommodityInfoById" resultType="Commodity">
        select id, title, pubdate, img, quantity, point, summary, content
        from
        commodity
        where id = #{id}
    </select>
    <select id="getCommodityInfoId" resultType="Commodity">
        select
                id ,point, quantity
        from
                commodity
        where id = #{id} for update
    </select>
    <update id="subQuantityByCommodityId">
        update
                commodity
        set
                quantity = quantity - 1
        where id = #{id}
    </update>
    <insert id="exchangeCommodity">
        insert
        into
                deliver_commodity(commodity_id, user_id, user_locations_id)
        values (#{commodityId}, #{userId}, #{userLocationsId})
    </insert>
    <select id="getExchangeCommodityTotalSize" resultType="_int">
        select count(id)
        from deliver_commodity
        where user_id = #{userId}
    </select>
    <resultMap id="deliverCommodity" type="DeliverCommodity">
        <id property="id" column="id"/>
        <association property="userLocations" javaType="com.qiaoyansong.entity.background.UserLocations">
            <id property="id" column="user_locations_id"/>
            <result property="area" column="area"/>
            <result property="city" column="city"/>
            <result property="location" column="location"/>
            <result property="name" column="name"/>
            <result property="province" column="province"/>
            <result property="telephone" column="telephone"/>
        </association>
        <association property="commodity" javaType="com.qiaoyansong.entity.background.Commodity">
            <id property="id" column="commodity_id"/>
            <result property="title" column="title"/>
        </association>
    </resultMap>
    <select id="getExchangeCommodityListByUserId" resultMap="deliverCommodity">
        select d.id, d.user_locations_id, d.commodity_id, u.area, u.city, u.location, u.name, u.province, u.telephone, c.title from
                deliver_commodity d inner join commodity c
            on d.commodity_id = c.id inner join user_locations u on d.user_locations_id = u.id
        where d.user_id = #{condition.userId}
        order by d.id ${condition.orderBy}
        limit #{beginIndex}, #{pageSize}
    </select>
</mapper>